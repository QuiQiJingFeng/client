{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "item",
    "Prefab",
    "onLoad",
    "self",
    "scrollview",
    "node",
    "getComponent",
    "_vertical",
    "vertical",
    "view_port",
    "getChildByName",
    "box",
    "getBoundingBox",
    "content",
    "template",
    "instantiate",
    "item_size",
    "getContentSize",
    "item_anchor",
    "getAnchorPoint",
    "reuse_cells",
    "on",
    "Scrolling",
    "log",
    "DequeueCell",
    "length",
    "pop",
    "LoadData",
    "data",
    "removeAllChildren",
    "scrollToOffset",
    "p",
    "offset_y",
    "y",
    "height",
    "offset_x",
    "x",
    "width",
    "unit_x",
    "unit_y",
    "last_x",
    "last_y",
    "i",
    "pos",
    "word_pos",
    "convertToWorldSpace",
    "new_pos",
    "convertToNodeSpace",
    "is_contain",
    "rectContainsPoint",
    "setPosition",
    "addChild",
    "setContentSize",
    "size"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        item: cc.Prefab\n    },\n    //代码加载完毕\n    onLoad: function () {\n        let self = this;\n        self.scrollview = self.node.getComponent(\"cc.ScrollView\")\n        //是否为竖直方向\n        self._vertical = self.scrollview.vertical;\n        //视口\n        self.view_port = self.node.getChildByName(\"view\");\n        self.box = self.view_port.getBoundingBox();\n        //内容节点\n        self.content = self.view_port.getChildByName(\"content\");\n\n        let template = cc.instantiate(self.item);\n        self.item_size = template.getContentSize();\n        self.item_anchor = template.getAnchorPoint();\n\n        \n        self.reuse_cells = [];\n\n        self.node.on(\"scrolling\",self.Scrolling,self);\n\n        self.node.on(\"scroll-ended\",function(){\n            cc.log(\"---------------scroll-ended-------------\");\n        });\n\n        \n    },\n\n    DequeueCell: function() {\n        let self = this;\n        if(self.reuse_cells.length > 0) {\n            return self.reuse_cells.pop();\n        }\n\n        return cc.instantiate(self.item);\n    },\n\n    //初始根据数据初始化\n    LoadData: function (data) {\n        let self = this;\n        self.content.removeAllChildren();\n        self.scrollview.scrollToOffset(cc.p(0,0));\n        let offset_y = (1 - self.item_anchor.y) * self.item_size.height\n        let offset_x = self.item_anchor.x * self.item_size.width\n        let unit_x = self.item_size.width\n        let unit_y = 0\n        if (self._vertical) {\n            unit_x = 0\n            unit_y = self.item_size.height\n        }\n        let last_x,last_y\n        for (let i = 0; i < data.length; ++i) {\n            let x = offset_x + unit_x * i\n            let y = -1 * (offset_y + unit_y * i)\n            let pos = cc.p(x,y);\n            //世界坐标点\n            let word_pos = self.content.convertToWorldSpace(pos);\n            let new_pos = self.view_port.convertToNodeSpace(pos);\n            let is_contain = cc.rectContainsPoint(self.box,pos);\n            if(is_contain) {\n                let item = self.DequeueCell();\n                item.setPosition(cc.p(x,y));\n                self.content.addChild(item);\n            }\n            last_x = x;\n            last_y = y;\n        }\n        let width = last_x + self.item_size.width * self.item_anchor.x\n        let height = -last_y + self.item_size.height * (1 - self.item_anchor.y)\n        self.content.setContentSize(cc.size(width,height));\n    },\n\n    Scrolling: function () {\n        cc.log(\"--------scrolling------------\");\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"
  ]
}