{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "CCArray",
    "require",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "item",
    "Prefab",
    "onLoad",
    "self",
    "scrollview",
    "node",
    "getComponent",
    "_vertical",
    "vertical",
    "view_port",
    "getChildByName",
    "box",
    "getBoundingBox",
    "content",
    "template",
    "instantiate",
    "item_size",
    "getContentSize",
    "item_anchor",
    "getAnchorPoint",
    "reuse_cells",
    "init",
    "cur_cells",
    "positions",
    "moving",
    "on",
    "Scrolling",
    "ScrollEnd",
    "DequeueCell",
    "idx",
    "length",
    "removefirst",
    "tag",
    "string",
    "data",
    "name",
    "push",
    "LoadData",
    "removeAllChildren",
    "scrollToOffset",
    "p",
    "offset_y",
    "y",
    "height",
    "offset_x",
    "x",
    "width",
    "unit_x",
    "unit_y",
    "last_x",
    "last_y",
    "i",
    "pos",
    "word_pos",
    "convertToWorldSpaceAR",
    "new_pos",
    "convertToNodeSpaceAR",
    "is_contain",
    "rectContainsPoint",
    "setPosition",
    "addChild",
    "setContentSize",
    "size",
    "update",
    "dt",
    "children",
    "cells",
    "child",
    "is_inter",
    "rectIntersectsRect",
    "removeFromParent",
    "remove",
    "cpos",
    "rect",
    "has",
    "id"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "let CCArray = require(\"CCArray\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        item: cc.Prefab\n    },\n    //代码加载完毕\n    onLoad: function () {\n        let self = this;\n        self.scrollview = self.node.getComponent(\"cc.ScrollView\")\n        //是否为竖直方向\n        self._vertical = self.scrollview.vertical;\n        //视口\n        self.view_port = self.node.getChildByName(\"view\");\n        //返回的是包围盒的矩形，跟锚点在哪里无关,这里获得的是相对于scrollview的坐标系的包围盒\n        self.box = self.view_port.getBoundingBox();\n        //内容节点\n        self.content = self.view_port.getChildByName(\"content\");\n\n        let template = cc.instantiate(self.item);\n        self.item_size = template.getContentSize();\n        self.item_anchor = template.getAnchorPoint();\n\n        \n        self.reuse_cells = new CCArray();\n        self.reuse_cells.init();\n\n        self.cur_cells = new CCArray();\n        self.cur_cells.init();\n\n        self.positions = new CCArray();\n        self.positions.init();\n\n        self.moving = false;\n        self.node.on(\"scrolling\",self.Scrolling,self);\n        self.node.on(\"scroll-ended\",self.ScrollEnd,self);\n    },\n\n    Scrolling: function () {\n        let self = this;\n        self.moving = true;\n    },\n\n    ScrollEnd: function () {\n        let self = this;\n        self.moving = false;\n    },\n\n    DequeueCell: function(idx) {\n        let self = this;\n        let item;\n        if(self.reuse_cells.length() > 0) {\n            item = self.reuse_cells.removefirst();\n        }else{\n            item = cc.instantiate(self.item);\n        } \n        item.tag = idx;\n        item.getChildByName(\"name\").getComponent(\"cc.Label\").string = self.data[idx].name;\n        self.cur_cells.push(item);\n        return item;\n    },\n\n    //初始根据数据初始化\n    LoadData: function (data) {\n        let self = this;\n        self.data = data;\n        self.content.removeAllChildren();\n        self.scrollview.scrollToOffset(cc.p(0,0));\n        self.offset_y = (1 - self.item_anchor.y) * self.item_size.height\n        self.offset_x = self.item_anchor.x * self.item_size.width\n        let unit_x = self.item_size.width\n        let unit_y = 0\n        if (self._vertical) {\n            unit_x = 0\n            unit_y = self.item_size.height\n        }\n        let last_x,last_y\n\n        for (let i = 0; i < data.length; ++i) {\n            let x = self.offset_x + unit_x * i\n            let y = -1 * (self.offset_y + unit_y * i)\n            let pos = cc.p(x,y);\n            //世界坐标点\n            let word_pos = self.content.convertToWorldSpaceAR(pos);\n            let new_pos = self.node.convertToNodeSpaceAR(word_pos);\n            let is_contain = cc.rectContainsPoint(self.box,new_pos);\n            if(is_contain) {\n                let item = self.DequeueCell(i);\n                item.setPosition(pos);\n                self.content.addChild(item);\n            }\n            last_x = x;\n            last_y = y;\n            self.positions.push(pos);\n        }\n        let width = last_x + self.item_size.width * self.item_anchor.x\n        let height = -last_y + self.item_size.height * (1 - self.item_anchor.y)\n        self.content.setContentSize(cc.size(width,height));\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        let self = this;\n        if(self.moving) {\n            let children = self.cur_cells.cells;\n            for(let idx in children) {\n                let child = children[idx];\n                //将child的bodingbox转换到scrollview上\n                let box = child.getBoundingBox();\n                let pos = cc.p(box.x,box.y);\n                let word_pos = self.content.convertToWorldSpaceAR(pos);\n                let new_pos = self.node.convertToNodeSpaceAR(word_pos);\n                box.x = new_pos.x;\n                box.y = new_pos.y;\n\n                let is_inter = cc.rectIntersectsRect(box,self.box);\n                if(!is_inter) {\n                    child.removeFromParent();\n                    self.cur_cells.remove(child);\n                    self.reuse_cells.push(child);\n                }\n            }\n            let positions = self.positions.cells;\n            for(let idx in positions) {\n                let pos = positions[idx];\n                let cpos = cc.p(pos.x-self.offset_x,pos.y-self.offset_y);\n                let word_pos = self.content.convertToWorldSpaceAR(cpos);\n                let new_pos = self.node.convertToNodeSpaceAR(word_pos);\n                let rect = cc.rect(new_pos.x,new_pos.y,self.item_size.width,self.item_size.height);\n                let is_contain = cc.rectIntersectsRect(self.box,rect);\n                let has = false;\n                if(is_contain) {\n                    let children = self.cur_cells.cells;\n                    for(let id in children) {\n                        let item = children[id];\n                        if(item.tag === idx){\n                            has = true;\n                            break;\n                        }\n                    }\n                    if(!has){\n                        let item = self.DequeueCell(idx);\n                        item.setPosition(pos);\n                        self.content.addChild(item);\n                    }\n                }\n            }\n\n            \n        }\n    },\n});\n"
  ]
}