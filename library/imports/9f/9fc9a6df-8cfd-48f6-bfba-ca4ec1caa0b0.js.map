{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "FYDArray",
    "require",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "item",
    "Prefab",
    "item_script",
    "onLoad",
    "self",
    "scrollview",
    "node",
    "getComponent",
    "_vertical",
    "vertical",
    "view_port",
    "getChildByName",
    "box",
    "getBoundingBox",
    "content",
    "template",
    "instantiate",
    "item_size",
    "getContentSize",
    "item_anchor",
    "getAnchorPoint",
    "on",
    "Scrolling",
    "ScrollEnd",
    "ResetProperty",
    "reuse_cells",
    "cur_cells",
    "positions",
    "moving",
    "DequeueCell",
    "idx",
    "length",
    "removefirst",
    "tag",
    "msg",
    "data",
    "log",
    "RefreshData",
    "push",
    "LoadData",
    "removeAllChildren",
    "scrollToOffset",
    "p",
    "offset_y",
    "y",
    "height",
    "offset_x",
    "x",
    "width",
    "unit_x",
    "unit_y",
    "last_x",
    "last_y",
    "i",
    "pos",
    "word_pos",
    "convertToWorldSpaceAR",
    "new_pos",
    "convertToNodeSpaceAR",
    "is_contain",
    "rectContainsPoint",
    "setPosition",
    "addChild",
    "setContentSize",
    "size",
    "update",
    "dt",
    "children",
    "cells",
    "child",
    "is_inter",
    "rectIntersectsRect",
    "removeFromParent",
    "remove",
    "cpos",
    "rect",
    "has",
    "id"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "/*\n    @author  FYD\n    @date    2017.07.06\n*/\nlet FYDArray = require(\"FYDArray\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        item: cc.Prefab,\n        item_script:\"\",     //指定cell脚本的名称\n    },\n    //代码加载完毕\n    onLoad: function () {\n        let self = this;\n        self.scrollview = self.node.getComponent(\"cc.ScrollView\")\n        //是否为竖直方向\n        self._vertical = self.scrollview.vertical;\n        //视口\n        self.view_port = self.node.getChildByName(\"view\");\n        //返回的是包围盒的矩形，跟锚点在哪里无关,这里获得的是相对于scrollview的坐标系的包围盒\n        self.box = self.view_port.getBoundingBox();\n        //内容节点\n        self.content = self.view_port.getChildByName(\"content\");\n\n        let template = cc.instantiate(self.item);\n        self.item_size = template.getContentSize();\n        self.item_anchor = template.getAnchorPoint();\n        \n        self.node.on(\"scrolling\",self.Scrolling,self);\n        self.node.on(\"scroll-ended\",self.ScrollEnd,self);\n    },\n\n    ResetProperty:function() {\n        let self = this;\n        self.reuse_cells = new FYDArray();\n        self.cur_cells = new FYDArray();\n        self.positions = new FYDArray();\n        self.moving = false;\n    },\n\n    Scrolling: function () {\n        let self = this;\n        self.moving = true;\n    },\n\n    ScrollEnd: function () {\n        let self = this;\n        self.moving = false;\n    },\n\n    DequeueCell: function(idx) {\n        let self = this;\n        let item;\n        if(self.reuse_cells.length() > 0) {\n            item = self.reuse_cells.removefirst();\n        }else{\n            item = cc.instantiate(self.item);\n        } \n        item.tag = idx;\n        let msg = self.data[idx];\n        if(!msg) {cc.log(\"data 不存在-----\",idx)}\n        item.getComponent(self.item_script).RefreshData(self.data[idx]);\n        self.cur_cells.push(item);\n        return item;\n    },\n\n    //初始根据数据初始化\n    LoadData: function (data) {\n        let self = this;\n        self.ResetProperty();\n        self.data = data;\n        self.content.removeAllChildren();\n        self.scrollview.scrollToOffset(cc.p(0,0));\n        self.offset_y = (1 - self.item_anchor.y) * self.item_size.height\n        self.offset_x = self.item_anchor.x * self.item_size.width\n        let unit_x = self.item_size.width\n        let unit_y = 0\n        if (self._vertical) {\n            unit_x = 0\n            unit_y = self.item_size.height\n        }\n        let last_x,last_y\n\n        for (let i = 0; i < data.length; ++i) {\n            let x = self.offset_x + unit_x * i\n            let y = -1 * (self.offset_y + unit_y * i)\n            let pos = cc.p(x,y);\n            //世界坐标点\n            let word_pos = self.content.convertToWorldSpaceAR(pos);\n            let new_pos = self.node.convertToNodeSpaceAR(word_pos);\n            let is_contain = cc.rectContainsPoint(self.box,new_pos);\n            if(is_contain) {\n                let item = self.DequeueCell(i);\n                item.setPosition(pos);\n                self.content.addChild(item);\n            }\n            last_x = x;\n            last_y = y;\n            self.positions.push(pos);\n        }\n        let width = last_x + self.item_size.width * self.item_anchor.x\n        let height = -last_y + self.item_size.height * (1 - self.item_anchor.y)\n        self.content.setContentSize(cc.size(width,height));\n    },\n\n    update: function (dt) {\n        let self = this;\n        if(self.moving) {\n            let children = self.cur_cells.cells;\n            for(let idx in children) {\n                let child = children[idx];\n                //将child的bodingbox转换到scrollview上\n                let box = child.getBoundingBox();\n                let pos = cc.p(box.x,box.y);\n                let word_pos = self.content.convertToWorldSpaceAR(pos);\n                let new_pos = self.node.convertToNodeSpaceAR(word_pos);\n                box.x = new_pos.x;\n                box.y = new_pos.y;\n\n                let is_inter = cc.rectIntersectsRect(box,self.box);\n                if(!is_inter) {\n                    child.removeFromParent();\n                    self.cur_cells.remove(child);\n                    self.reuse_cells.push(child);\n                }\n            }\n            let positions = self.positions.cells;\n            for(let idx in positions) {\n                let pos = positions[idx];\n                let cpos = cc.p(pos.x-self.offset_x,pos.y-self.offset_y);\n                let word_pos = self.content.convertToWorldSpaceAR(cpos);\n                let new_pos = self.node.convertToNodeSpaceAR(word_pos);\n                let rect = cc.rect(new_pos.x,new_pos.y,self.item_size.width,self.item_size.height);\n                let is_contain = cc.rectIntersectsRect(self.box,rect);\n                let has = false;\n                if(is_contain) {\n                    let children = self.cur_cells.cells;\n                    for(let id in children) {\n                        let item = children[id];\n                        if(item.tag === idx){\n                            has = true;\n                            break;\n                        }\n                    }\n                    if(!has){\n                        let item = self.DequeueCell(idx);\n                        item.setPosition(pos);\n                        self.content.addChild(item);\n                    }\n                }\n            }\n\n            \n        }\n    },\n});\n"
  ]
}