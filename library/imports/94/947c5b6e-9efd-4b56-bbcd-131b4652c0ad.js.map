{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "login_anim",
    "sp",
    "Skeleton",
    "register_node",
    "Node",
    "server_panel",
    "bottom_panel",
    "server_msgbox",
    "loading_panel",
    "onLoad",
    "self",
    "addAnimation",
    "InitProject",
    "RegisterLogicEvent",
    "appEvent",
    "RegisterEvent",
    "type",
    "data",
    "SetViewMode",
    "appUtils",
    "Show",
    "Hide",
    "appNet",
    "DisConnect",
    "window",
    "require",
    "Init",
    "appConfig",
    "login_logic"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAeC,GAAGC,QADV;AAERC,uBAAeR,GAAGS,IAFV;AAGRC,sBAAeV,GAAGS,IAHV;AAIRE,sBAAeX,GAAGS,IAJV;AAKRG,uBAAeZ,GAAGS,IALV;AAMRI,uBAAeb,GAAGS;AANV,KAHP;;AAYL;AACAK,YAAQ,kBAAY;AAChB,YAAIC,OAAO,IAAX;;AAEAA,aAAKV,UAAL,CAAgBW,YAAhB,CAA6B,CAA7B,EAA+B,QAA/B,EAAwC,IAAxC,EAA6C,CAA7C;;AAEAD,aAAKE,WAAL;AACAF,aAAKG,kBAAL;AACH,KApBI;;AAsBLA,wBAAmB,8BAAW;AAC1B,YAAIH,OAAO,IAAX;AACA;AACAI,iBAASC,aAAT,CAAuB,iBAAvB,EAAyC,UAASC,IAAT,EAAcC,IAAd,EAAmB;AACxDP,iBAAKQ,WAAL,CAAiBF,IAAjB,EAAsBC,IAAtB;AACH,SAFD;AAGH,KA5BI;;AA8BLC,iBAAY,qBAASF,IAAT,EAAcC,IAAd,EAAmB;AAC3B,YAAIP,OAAO,IAAX;AACA,gBAAOM,IAAP;AACI,iBAAK,aAAL;AAAmB;AACfG,6BAASC,IAAT,CAAcV,KAAKL,YAAnB;AACAc,6BAASE,IAAT,CAAcX,KAAKP,aAAnB;AAEH;AACD,iBAAK,YAAL;AAAkB;AACdmB,2BAAOC,UAAP;AACAJ,6BAASE,IAAT,CAAcX,KAAKL,YAAnB,EAAgCK,KAAKP,aAArC;AACAgB,6BAASC,IAAT,CAAcV,KAAKJ,YAAnB;AAEH;AACD,iBAAK,eAAL;AAAqB;AACjBa,6BAASC,IAAT,CAAcV,KAAKH,aAAnB;AACH;AACD,iBAAK,gBAAL;AAAsB;AAClBY,6BAASC,IAAT,CAAcV,KAAKP,aAAnB;AACH;AACD,iBAAK,aAAL;AAAmB;AACfgB,6BAASC,IAAT,CAAcV,KAAKF,aAAnB;AACH;AACD,iBAAK,aAAL;AAAmB;AACfW,6BAASE,IAAT,CAAcX,KAAKF,aAAnB;AACH;AAvBL;AAyBH,KAzDI;;AA2DLI,iBAAY,uBAAW;;AAEnBY,eAAOF,MAAP,GAAgBG,QAAQ,SAAR,CAAhB;AACAD,eAAOF,MAAP,CAAcI,IAAd;AACAF,eAAOV,QAAP,GAAkBW,QAAQ,kBAAR,GAAlB;AACAD,eAAOV,QAAP,CAAgBY,IAAhB;AACAF,eAAOL,QAAP,GAAkBM,QAAQ,OAAR,CAAlB;AACAD,eAAOG,SAAP,GAAmBF,QAAQ,gBAAR,CAAnB;AACAD,eAAOG,SAAP,CAAiBD,IAAjB;;AAEA,YAAIE,cAAcH,QAAQ,aAAR,CAAlB;AACAG,oBAAYF,IAAZ;AACH;AAvEI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        login_anim:    sp.Skeleton,\n        register_node: cc.Node,\n        server_panel:  cc.Node,\n        bottom_panel:  cc.Node,\n        server_msgbox: cc.Node,\n        loading_panel: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this;\n\n        self.login_anim.addAnimation(1,\"loop_1\",true,1);\n\n        self.InitProject();\n        self.RegisterLogicEvent();\n    },\n\n    RegisterLogicEvent:function() {\n        let self = this;\n        //主界面只负责UI的显示管理\n        appEvent.RegisterEvent(\"LOGIN_VIEW_MODE\",function(type,data){\n            self.SetViewMode(type,data);\n        });\n    },\n\n    SetViewMode:function(type,data){\n        let self = this;\n        switch(type){\n            case \"SERVER_LIST\":{\n                appUtils.Show(self.server_panel);\n                appUtils.Hide(self.register_node);\n\n            }break;\n            case \"BACK_LOGIN\":{\n                appNet.DisConnect();\n                appUtils.Hide(self.server_panel,self.register_node);\n                appUtils.Show(self.bottom_panel);     \n\n            }break;\n            case \"SERVER_MSGBOX\":{\n                appUtils.Show(self.server_msgbox);\n            }break;\n            case \"REGISTER_PANEL\":{\n                appUtils.Show(self.register_node);\n            }break;\n            case \"SHOW_LODING\":{\n                appUtils.Show(self.loading_panel);\n            }break;\n            case \"HIDE_LODING\":{\n                appUtils.Hide(self.loading_panel);\n            }break;\n        }\n    },\n\n    InitProject:function() {\n\n        window.appNet = require(\"network\");\n        window.appNet.Init();\n        window.appEvent = require(\"event_dispatcher\")();\n        window.appEvent.Init();\n        window.appUtils = require(\"utils\");\n        window.appConfig = require(\"config_manager\");\n        window.appConfig.Init();\n\n        let login_logic = require(\"login_logic\");\n        login_logic.Init();\n    }\n});\n"
  ]
}