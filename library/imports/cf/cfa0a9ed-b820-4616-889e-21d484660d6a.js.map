{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "utils",
    "SendPostRequest",
    "server_path",
    "data",
    "callback",
    "errcall",
    "post_data",
    "JSON",
    "stringify",
    "xhr",
    "cc",
    "loader",
    "getXMLHttpRequest",
    "open",
    "setRequestHeader",
    "send",
    "log",
    "onreadystatechange",
    "readyState",
    "status",
    "result",
    "responseText",
    "GetPlatform",
    "platform",
    "sys",
    "isNative",
    "browserType",
    "os",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA,IAAIA,QAAQ,EAAZ;;AAEAA,MAAMC,eAAN,GAAwB,UAAUC,WAAV,EAAsBC,IAAtB,EAA2BC,QAA3B,EAAoCC,OAApC,EAA6C;AACjE,QAAIC,YAAYC,KAAKC,SAAL,CAAeL,IAAf,CAAhB;AACA,QAAIM,MAAMC,GAAGC,MAAH,CAAUC,iBAAV,EAAV;AACAH,QAAII,IAAJ,CAAS,MAAT,EAAiBX,WAAjB;AACG;AACHO,QAAIK,gBAAJ,CAAqB,cAArB,EAAoC,kBAApC;AACAL,QAAIM,IAAJ,CAAST,SAAT;AACAI,OAAGM,GAAH,CAAO,qBAAP,EAA6BV,SAA7B;AACAG,QAAIQ,kBAAJ,GAAyB,YAAY;AACjC,YAAIR,IAAIS,UAAJ,IAAkB,CAAlB,IAAwBT,IAAIU,MAAJ,IAAc,GAA1C,EAAgD;AAC5C,gBAAIC,SAASX,IAAIY,YAAjB;AACAjB,qBAASK,IAAIY,YAAb;AACH,SAHD,MAGM,IAAGZ,IAAIS,UAAJ,IAAkB,CAAlB,IAAwBT,IAAIU,MAAJ,IAAc,GAAzC,EAA+C;AACjDd,oBAAQI,IAAIU,MAAZ;AACH;AACJ,KAPD;AAQH,CAhBD;;AAkBAnB,MAAMsB,WAAN,GAAoB,YAAW;AAC3B,QAAIC,WAAW,EAAf;AACA,QAAG,CAACb,GAAGc,GAAH,CAAOC,QAAX,EAAoB;AAChBtB,aAAKoB,QAAL,GAAgB,aAAab,GAAGc,GAAH,CAAOE,WAApC;AACH,KAFD,MAEK;AACDvB,aAAKoB,QAAL,GAAgBb,GAAGc,GAAH,CAAOG,EAAvB,CADC,CACkC;AACtC;AACD,WAAOJ,QAAP;AACH,CARD;;AAUAK,OAAOC,OAAP,GAAiB7B,KAAjB",
  "file": "unknown",
  "sourcesContent": [
    "let utils = {};\n\nutils.SendPostRequest = function (server_path,data,callback,errcall) {\n    var post_data = JSON.stringify(data);\n    var xhr = cc.loader.getXMLHttpRequest();\n    xhr.open(\"POST\", server_path);\n       //xhr.open(\"GET\", ServerLink+link+\"?\"+parm,false);\n    xhr.setRequestHeader(\"Content-Type\",\"application/json\");\n    xhr.send(post_data);\n    cc.log(\"FYD====>>>>>FINISH \",post_data);\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4 && (xhr.status == 200)) {            \n            var result = xhr.responseText;\n            callback(xhr.responseText);\n        }else if(xhr.readyState == 4 && (xhr.status != 200)) {\n            errcall(xhr.status); \n        }\n    };\n}\n\nutils.GetPlatform = function() {\n    let platform = \"\";\n    if(!cc.sys.isNative){\n        data.platform = 'browser-' + cc.sys.browserType;\n    }else{\n        data.platform = cc.sys.os;         //browser windows android ios         \n    }\n    return platform;\n}\n\nmodule.exports = utils;\n"
  ]
}