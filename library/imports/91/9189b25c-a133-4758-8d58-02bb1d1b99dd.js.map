{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "EventDisPatcher",
    "event_dispatcher",
    "Init",
    "self",
    "handlers",
    "RegisterEvent",
    "event_name",
    "handle",
    "prehandle",
    "cc",
    "log",
    "DispatchEvent",
    "data",
    "call_back",
    "RemoveEventListener",
    "RemoveAllEventListener",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA,IAAIA,kBAAkB,SAAlBA,eAAkB,GAAU;AAC5B,QAAIC,mBAAmB,EAAvB;;AAEAA,qBAAiBC,IAAjB,GAAwB,YAAW;AAC/B,YAAIC,OAAO,IAAX;AACAA,aAAKC,QAAL,GAAgB,EAAhB;AACH,KAHD;;AAKAH,qBAAiBI,aAAjB,GAAiC,UAASC,UAAT,EAAoBC,MAApB,EAA4B;AACzD,YAAIJ,OAAO,IAAX;AACA,YAAIK,YAAYL,KAAKC,QAAL,CAAcE,UAAd,CAAhB;AACA,YAAGE,SAAH,EAAc;AACVC,eAAGC,GAAH,CAAO,6BAAP;AACH;AACDP,aAAKC,QAAL,CAAcE,UAAd,IAA4BC,MAA5B;AACH,KAPD;;AASAN,qBAAiBU,aAAjB,GAAiC,UAASL,UAAT,EAAoBM,IAApB,EAAyBC,SAAzB,EAAoC;AACjE,YAAIV,OAAO,IAAX;AACA,YAAII,SAASJ,KAAKC,QAAL,CAAcE,UAAd,CAAb;AACA,YAAG,CAACC,MAAJ,EAAY;AACZ,eAAOA,OAAOK,IAAP,EAAYC,SAAZ,CAAP;AACH,KALD;;AAOAZ,qBAAiBa,mBAAjB,GAAuC,UAASR,UAAT,EAAqB;AACxD,YAAIH,OAAO,IAAX;AACAA,aAAKC,QAAL,CAAcE,UAAd,IAA4B,IAA5B;AACH,KAHD;;AAKAL,qBAAiBc,sBAAjB,GAA0C,YAAW;AACjD,YAAIZ,OAAO,IAAX;AACAA,aAAKC,QAAL,GAAgB,EAAhB;AACH,KAHD;AAIA,WAAOH,gBAAP;AACH,CAlCD;;AAoCAe,OAAOC,OAAP,GAAiBjB,eAAjB",
  "file": "unknown",
  "sourcesContent": [
    "let EventDisPatcher = function(){\n    let event_dispatcher = {}\n\n    event_dispatcher.Init = function() {\n        let self = this;\n        self.handlers = {}\n    }\n\n    event_dispatcher.RegisterEvent = function(event_name,handle) {\n        let self = this;\n        let prehandle = self.handlers[event_name] \n        if(prehandle) {\n            cc.log(\"WARNING: EVENT ARRADY EXIST\");\n        }\n        self.handlers[event_name] = handle\n    }\n\n    event_dispatcher.DispatchEvent = function(event_name,data,call_back) {\n        let self = this;\n        let handle = self.handlers[event_name]\n        if(!handle) return;\n        return handle(data,call_back);\n    }\n\n    event_dispatcher.RemoveEventListener = function(event_name) {\n        let self = this;\n        self.handlers[event_name] = null;\n    }\n\n    event_dispatcher.RemoveAllEventListener = function() {\n        let self = this;\n        self.handlers = {};\n    }\n    return event_dispatcher;\n}\n\nmodule.exports = EventDisPatcher;"
  ]
}