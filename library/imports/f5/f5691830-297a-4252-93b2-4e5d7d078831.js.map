{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "require",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "txt_tip",
    "Label",
    "_str_state",
    "_progress",
    "_is_loding",
    "onLoad",
    "self",
    "sys",
    "isNative",
    "cvs",
    "node",
    "getComponent",
    "Canvas",
    "fitHeight",
    "fitWidth",
    "string",
    "startPreloading",
    "app",
    "Const",
    "loader",
    "onProgress",
    "completedCount",
    "totalCount",
    "item",
    "loadResDir",
    "err",
    "assets",
    "onLoadComplete",
    "onComplete",
    "director",
    "loadScene",
    "update",
    "dt",
    "length",
    "Math",
    "floor",
    "t",
    "Date",
    "now",
    "i"
  ],
  "mappings": ";;AAAAA,QAAQ,QAAR;AACA;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAAQL,GAAGM,KADH;AAERC,oBAAW,EAFH;AAGRC,mBAAU,GAHF;AAIRC,oBAAW;AAJH,KAHP;;AAUL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,OAAO,IAAX;AACA;AACA,YAAG,CAACX,GAAGY,GAAH,CAAOC,QAAX,EAAoB;AAChB,gBAAIC,MAAMH,KAAKI,IAAL,CAAUC,YAAV,CAAuBhB,GAAGiB,MAA1B,CAAV;AACAH,gBAAII,SAAJ,GAAgB,IAAhB;AACAJ,gBAAIK,QAAJ,GAAe,IAAf;AACH;AACDR,aAAKN,OAAL,CAAae,MAAb,GAAsBT,KAAKJ,UAA3B;AACA;AACAI,aAAKU,eAAL;AACH,KAtBI;;AAwBLA,qBAAgB,2BAAU;AACtB,YAAIV,OAAO,IAAX;AACAA,aAAKJ,UAAL,GAAkBe,IAAIC,KAAJ,CAAU,QAAV,EAAoB,iBAApB,CAAlB;AACAZ,aAAKF,UAAL,GAAkB,IAAlB;AACA;AACAT,WAAGwB,MAAH,CAAUC,UAAV,GAAuB,UAAWC,cAAX,EAA2BC,UAA3B,EAAwCC,IAAxC,EAA8C;AACjE,gBAAGjB,KAAKF,UAAR,EAAmB;AACfE,qBAAKH,SAAL,GAAiBkB,iBAAeC,UAAhC;AACH;AACJ,SAJD;AAKA;AACA3B,WAAGwB,MAAH,CAAUK,UAAV,CAAqB,UAArB,EAAiC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AACpD;AACApB,iBAAKqB,cAAL;AACH,SAHD;AAIH,KAvCI;;AAyCLA,oBAAe,0BAAU;AACrB,YAAIrB,OAAO,IAAX;AACAA,aAAKF,UAAL,GAAkB,KAAlB;AACAE,aAAKJ,UAAL,GAAkBe,IAAIC,KAAJ,CAAU,QAAV,EAAoB,aAApB,CAAlB;AACAvB,WAAGwB,MAAH,CAAUS,UAAV,GAAuB,IAAvB;AACA;AACAjC,WAAGkC,QAAH,CAAYC,SAAZ,CAAsB,OAAtB;AACH,KAhDI;;AAkDL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAI1B,OAAO,IAAX;AACA,YAAGA,KAAKJ,UAAL,CAAgB+B,MAAhB,IAA0B,CAA7B,EAA+B;AAC3B;AACH;AACD3B,aAAKN,OAAL,CAAae,MAAb,GAAsBT,KAAKJ,UAAL,GAAkB,GAAxC;AACA,YAAGI,KAAKF,UAAR,EAAmB;AACfE,iBAAKN,OAAL,CAAae,MAAb,IAAuBmB,KAAKC,KAAL,CAAW7B,KAAKH,SAAL,GAAiB,GAA5B,IAAmC,GAA1D;AACH,SAFD,MAGI;AACA,gBAAIiC,IAAIF,KAAKC,KAAL,CAAWE,KAAKC,GAAL,KAAa,IAAxB,IAAgC,CAAxC;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIH,CAAnB,EAAsB,EAAGG,CAAzB,EAA2B;AACvBjC,qBAAKN,OAAL,CAAae,MAAb,IAAuB,GAAvB;AACH;AACJ;AACJ;AAlEI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "require(\"common\")\n// Compatible with v1.5.0+\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        txt_tip:cc.Label,\n        _str_state:'',\n        _progress:0.0,\n        _is_loding:false\n    },\n\n    // use self for initialization\n    onLoad: function () {\n        let self = this;\n        //如果是web模式(适应宽高),如果是 手机模式则只适应宽度\n        if(!cc.sys.isNative){\n            var cvs = self.node.getComponent(cc.Canvas);\n            cvs.fitHeight = true;\n            cvs.fitWidth = true;\n        }\n        self.txt_tip.string = self._str_state;\n        //预加载资源\n        self.startPreloading();\n    },\n    \n    startPreloading:function(){\n        let self = this;\n        self._str_state = app.Const[\"loding\"][\"wait_for_loding\"];\n        self._is_loding = true;\n        //绑定进度回调方法\n        cc.loader.onProgress = function ( completedCount, totalCount,  item ){\n            if(self._is_loding){\n                self._progress = completedCount/totalCount;\n            }\n        };\n        //加载资源文件夹\n        cc.loader.loadResDir(\"textures\", function (err, assets) {\n            //加载完毕回调\n            self.onLoadComplete();\n        });      \n    },\n    \n    onLoadComplete:function(){\n        let self = this;\n        self._is_loding = false;\n        self._str_state = app.Const[\"loding\"][\"login_ready\"];\n        cc.loader.onComplete = null;\n        //切换到登陆场景\n        cc.director.loadScene(\"login\");\n    },\n\n    // called every frame, uncomment self function to activate update callback\n    update: function (dt) {\n        let self = this;\n        if(self._str_state.length == 0){\n            return;\n        }\n        self.txt_tip.string = self._str_state + ' ';\n        if(self._is_loding){\n            self.txt_tip.string += Math.floor(self._progress * 100) + \"%\";   \n        }\n        else{\n            var t = Math.floor(Date.now() / 1000) % 4;\n            for(var i = 0; i < t; ++ i){\n                self.txt_tip.string += '.';\n            }            \n        }\n    }\n});"
  ]
}