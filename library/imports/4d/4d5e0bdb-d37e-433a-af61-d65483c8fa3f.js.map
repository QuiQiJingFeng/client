{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "protobuf",
    "require",
    "network",
    "Init",
    "self",
    "socket",
    "Connect",
    "url",
    "WebSocket",
    "onopen",
    "event",
    "cc",
    "log",
    "onerror",
    "onclose",
    "console",
    "onmessage",
    "fileReader",
    "FileReader",
    "onload",
    "progressEvent",
    "arrayBuffer",
    "result",
    "msg",
    "decode",
    "JSON",
    "stringify",
    "readAsArrayBuffer",
    "data",
    "DisConnect",
    "Send",
    "buffer",
    "encode",
    "send",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEA,IAAIC,UAAU,EAAd;;AAEAA,QAAQC,IAAR,GAAe,YAAW;AACtB,QAAIC,OAAO,IAAX;AACAA,SAAKC,MAAL,GAAc,IAAd;;AAEAL,aAASG,IAAT;;AAEAC,SAAKE,OAAL;AACH,CAPD;;AASAJ,QAAQI,OAAR,GAAkB,YAAW;AACzB,QAAIF,OAAO,IAAX;AACA,QAAIG,MAAM,qBAAV;AACA,QAAGH,KAAKC,MAAR,EAAgB;AAChBD,SAAKC,MAAL,GAAc,IAAIG,SAAJ,CAAcD,GAAd,CAAd;AACAH,SAAKC,MAAL,CAAYI,MAAZ,GAAqB,UAAUC,KAAV,EAAiB;AAClCC,WAAGC,GAAH,CAAO,QAAP;AACH,KAFD;;AAIAR,SAAKC,MAAL,CAAYQ,OAAZ,GAAsB,UAAUH,KAAV,EAAiB;AACnCC,WAAGC,GAAH,CAAO,sBAAP,EAA8BF,KAA9B;AACH,KAFD;;AAIAN,SAAKC,MAAL,CAAYS,OAAZ,GAAsB,UAAUJ,KAAV,EAAiB;AACnCK,gBAAQH,GAAR,CAAY,wBAAZ,EAAqCF,KAArC;AACH,KAFD;AAGA;AACAN,SAAKC,MAAL,CAAYW,SAAZ,GAAwB,UAAUN,KAAV,EAAiB;AACrC,YAAIO,aAAa,IAAIC,UAAJ,EAAjB;AACAD,mBAAWE,MAAX,GAAqB,UAASC,aAAT,EAAwB;AACzC,gBAAIC,cAAc,KAAKC,MAAvB,CADyC,CACV;AAC/B,gBAAIC,MAAMvB,SAASwB,MAAT,CAAgBH,WAAhB,CAAV;AACAV,eAAGC,GAAH,CAAO,QAAP,EAAgBa,KAAKC,SAAL,CAAeH,GAAf,CAAhB;AACH,SAJD;AAKAN,mBAAWU,iBAAX,CAA6BjB,MAAMkB,IAAnC;AACH,KARD;AASH,CA1BD;;AA4BA1B,QAAQ2B,UAAR,GAAqB,YAAW;AAC5B,QAAIzB,OAAO,IAAX;AACH,CAFD;;AAIAF,QAAQ4B,IAAR,GAAe,UAASP,GAAT,EAAc;AACzB,QAAInB,OAAO,IAAX;AACA,QAAG,CAACA,KAAKC,MAAT,EAAiB;AACjB,QAAI0B,SAAS/B,SAASgC,MAAT,CAAgBT,GAAhB,CAAb;AACAnB,SAAKC,MAAL,CAAY4B,IAAZ,CAAiBF,MAAjB;AACH,CALD;AAMAG,OAAOC,OAAP,GAAiBjC,OAAjB",
  "file": "unknown",
  "sourcesContent": [
    "let protobuf = require(\"protobuf\");\n\nlet network = {};\n\nnetwork.Init = function() {\n    let self = this;\n    self.socket = null;\n\n    protobuf.Init();\n\n    self.Connect();\n}\n\nnetwork.Connect = function() {\n    let self = this;\n    let url = \"ws://127.0.0.1:8888\";\n    if(self.socket) return;\n    self.socket = new WebSocket(url);\n    self.socket.onopen = function (event) {\n        cc.log(\"onopen\");\n    };\n\n    self.socket.onerror = function (event) {\n        cc.log(\"-------------onerror\",event);\n    };\n\n    self.socket.onclose = function (event) {\n        console.log(\"---------------onclose\",event);\n    };\n    //需要判断是原生环境还是浏览器环境，如果是浏览器环境websocket收到的data将是BLOB类型，需要将BLOB类型转换为ArrayBuffer\n    self.socket.onmessage = function (event) {\n        var fileReader = new FileReader();  \n        fileReader.onload  = function(progressEvent) {  \n            var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer \n            let msg = protobuf.decode(arrayBuffer);  \n            cc.log(\"data=>\",JSON.stringify(msg));\n        };  \n        fileReader.readAsArrayBuffer(event.data);  \n    };\n}\n\nnetwork.DisConnect = function() {\n    let self = this;\n}\n\nnetwork.Send = function(msg) {\n    let self = this;\n    if(!self.socket) return;\n    let buffer = protobuf.encode(msg);\n    self.socket.send(buffer);\n}\nmodule.exports = network;\n"
  ]
}