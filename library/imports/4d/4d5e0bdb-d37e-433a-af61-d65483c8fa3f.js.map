{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "protobuf",
    "require",
    "network",
    "Init",
    "self",
    "socket",
    "undefined",
    "event_dispatcher",
    "Connect",
    "call_back",
    "url",
    "WebSocket",
    "onopen",
    "event",
    "onerror",
    "DisConnect",
    "onclose",
    "onmessage",
    "cc",
    "sys",
    "isNative",
    "msg",
    "decode",
    "data",
    "obj",
    "JSON",
    "parse",
    "event_name",
    "Object",
    "keys",
    "DispatchEvent",
    "fileReader",
    "FileReader",
    "onload",
    "progressEvent",
    "result",
    "readAsArrayBuffer",
    "close",
    "Send",
    "buffer",
    "encode",
    "send",
    "RegisterEvent",
    "handle",
    "module",
    "exports"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "let protobuf = require(\"protobuf\");\nlet network = {};\n\nnetwork.Init = function() {\n    let self = this;\n    self.socket = undefined;\n    self.event_dispatcher = require(\"event_dispatcher\")();\n    self.event_dispatcher.Init();\n    protobuf.Init();\n}\n\nnetwork.Connect = function(call_back) {\n    let self = this;\n    let url = \"ws://127.0.0.1:8888\";\n    if(self.socket) {\n        return call_back();\n    }\n    self.socket = new WebSocket(url);\n    self.socket.onopen = function (event) {\n        if(call_back)\n            call_back();\n    };\n\n    self.socket.onerror = function (event) {\n        self.DisConnect();\n    };\n\n    self.socket.onclose = function (event) {\n        self.DisConnect();\n    };\n    \n    self.socket.onmessage = function (event) {\n        if(cc.sys.isNative) {\n            let msg = protobuf.decode(event.data);\n            let obj = JSON.parse(msg);\n            let event_name = Object.keys(obj)[0];\n            self.DispatchEvent(event_name,obj[event_name]);\n        }else {\n            var fileReader = new FileReader();  \n            fileReader.onload  = function(progressEvent) { \n                let msg = protobuf.decode(this.result);  \n                let obj = JSON.parse(msg);\n                let event_name = Object.keys(obj)[0];\n                self.DispatchEvent(event_name,obj[event_name]);\n            };  \n            fileReader.readAsArrayBuffer(event.data); \n        }\n    };\n}\n\nnetwork.DisConnect = function() {\n    let self = this;\n    if(self.socket) {\n        self.socket.close();\n        self.socket = undefined; \n    }\n}\n\nnetwork.Send = function(msg) {\n    let self = this;\n    self.Connect(function(){\n        let buffer = protobuf.encode(msg);\n        self.socket.send(buffer);\n    });\n}\n\nnetwork.RegisterEvent = function(event_name,handle) {\n    let self = this;\n    self.event_dispatcher.RegisterEvent(event_name,handle);\n}\n\nnetwork.DispatchEvent = function(event_name,data) {\n    let self = this;\n    self.event_dispatcher.DispatchEvent(event_name,data);\n}\n\nmodule.exports = network;\n"
  ]
}