{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "protobuf",
    "require",
    "network",
    "Init",
    "self",
    "socket",
    "Connect",
    "console",
    "log",
    "url",
    "WebSocket",
    "onopen",
    "event",
    "onerror",
    "onclose",
    "onmessage",
    "DisConnect",
    "Send",
    "msg",
    "buffer",
    "encode",
    "send",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEA,IAAIC,UAAU,EAAd;;AAEAA,QAAQC,IAAR,GAAe,YAAW;AACtB,QAAIC,OAAO,IAAX;AACAA,SAAKC,MAAL,GAAc,IAAd;;AAEAL,aAASG,IAAT;;AAEAC,SAAKE,OAAL;AACH,CAPD;;AASAJ,QAAQI,OAAR,GAAkB,YAAW;AACzBC,YAAQC,GAAR,CAAY,iBAAZ;AACA,QAAIJ,OAAO,IAAX;AACA,QAAIK,MAAM,qBAAV;AACAL,SAAKC,MAAL,GAAc,IAAIK,SAAJ,CAAcD,GAAd,CAAd;AACAL,SAAKC,MAAL,CAAYM,MAAZ,GAAqB,UAAUC,KAAV,EAAiB;AAClCL,gBAAQC,GAAR,CAAY,QAAZ;AACH,KAFD;;AAIA;AACAJ,SAAKC,MAAL,CAAYQ,OAAZ,GAAsB,UAAUD,KAAV,EAAiB;AACnCL,gBAAQC,GAAR,CAAY,sBAAZ;AACH,KAFD;;AAIA;AACAJ,SAAKC,MAAL,CAAYS,OAAZ,GAAsB,UAAUF,KAAV,EAAiB;AACnCL,gBAAQC,GAAR,CAAY,wBAAZ;AACH,KAFD;;AAIA;AACAJ,SAAKC,MAAL,CAAYU,SAAZ,GAAwB,UAAUH,KAAV,EAAiB;AACrCL,gBAAQC,GAAR,CAAY,WAAZ;AACAD,gBAAQC,GAAR,CAAYI,KAAZ;AACA;AACA;AACH,KALD;AAMH,CA1BD;;AA4BAV,QAAQc,UAAR,GAAqB,YAAW;AAC5B,QAAIZ,OAAO,IAAX;AACH,CAFD;;AAIAF,QAAQe,IAAR,GAAe,UAASC,GAAT,EAAc;AACzB,QAAId,OAAO,IAAX;AACA,QAAG,CAACA,KAAKC,MAAT,EAAiB;AACjB,QAAIc,SAASnB,SAASoB,MAAT,CAAgBF,GAAhB,CAAb;AACAd,SAAKC,MAAL,CAAYgB,IAAZ,CAAiBF,MAAjB;AACH,CALD;AAMAG,OAAOC,OAAP,GAAiBrB,OAAjB",
  "file": "unknown",
  "sourcesContent": [
    "let protobuf = require(\"protobuf\");\n\nlet network = {};\n\nnetwork.Init = function() {\n    let self = this;\n    self.socket = null;\n\n    protobuf.Init();\n\n    self.Connect();\n}\n\nnetwork.Connect = function() {\n    console.log(\"FYD=====CONNECT\");\n    let self = this;\n    let url = \"ws://127.0.0.1:8888\";\n    self.socket = new WebSocket(url);\n    self.socket.onopen = function (event) {\n        console.log(\"onopen\");\n    };\n\n    // GSocket.onerror = function (event) {\n    self.socket.onerror = function (event) {\n        console.log(\"-------------onerror\");\n    };\n\n    // GSocket.onclose = function (event) {\n    self.socket.onclose = function (event) {\n        console.log(\"---------------onclose\");\n    };\n\n    // GSocket.onmessage = function (event) {\n    self.socket.onmessage = function (event) {\n        console.log(\"onmessage\");\n        console.log(event);\n        // let msg = protobuf.decode(buffer);\n        // cc.log(\"data=>\",JSON.stringify(msg));\n    };\n}\n\nnetwork.DisConnect = function() {\n    let self = this;\n}\n\nnetwork.Send = function(msg) {\n    let self = this;\n    if(!self.socket) return;\n    let buffer = protobuf.encode(msg);\n    self.socket.send(buffer);\n}\nmodule.exports = network;\n"
  ]
}